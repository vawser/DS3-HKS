TRUE = 1
FALSE = 0
INVALID = -1
PLAYER_STATE_IDLE = 0
PLAYER_STATE_MOVE = 1
LOCOMOTION_STATE_MOVE = 0
LOCOMOTION_STATE_GUARD = 1
STAMINA_MINIMUM = 10
STAMINA_REDUCE_ROLLING = -10
SPEED_ENABLE_JUMP = 1.100000023841858
DOWN_NONE = -1
DOWN_NOW = 0
DOWN_FINISH = 1
LAND_DEFAULT = 0
LAND_MIDDLE = 1
LAND_HEAVY = 2
LAND_CAT_DEFAULT = 3
LAND_CAT_MIDDLE = 4
LAND_CAT_HEAVY = 5
LAND_JUMP = 6
FALL_DEFAULT = 0
FALL_ATTACK = 1
MOVE_STATE_NONE = -1
MOVE_STATE_WALK = 0
MOVE_STATE_RUN = 1
MOVE_STATE_DASH = 2
GUARD_STATE_START = 0
GUARD_STATE_IDLE = 1
GUARD_STATE_END = 2
GUARD_INDEX_IDLE = 0
GUARD_INDEX_MOVE = 1
ACTION_ARM_R1 = 0
ACTION_ARM_R2 = 1
ACTION_ARM_L1 = 2
ACTION_ARM_L2 = 3
ACTION_ARM_ACTION = 4
ACTION_ARM_SP_MOVE = 5
ACTION_ARM_CHANGE_STYLE = 6
ACTION_ARM_USE_ITEM = 7
ACTION_ARM_SWITCH_FORM = 8
ACTION_ARM_CHANGE_WEAPON_R = 9
ACTION_ARM_CHANGE_WEAPON_L = 10
ACTION_ARM_CHANGE_ITEM = 11
ACTION_ARM_BACKSTEP = 12
ACTION_ARM_ROLLING = 13
ACTION_ARM_GESTURE = 15
ITEM_RECOVER = 0
ITEM_WEAPON_ENCHANT = 1
ITEM_THROW_KNIFE = 2
ITEM_THROW_BOTTLE = 3
ITEM_MEGANE = 4
ITEM_REPAIR = 5
ITEM_PRAY = 6
ITEM_TRAP = 7
ITEM_MESSAGE = 8
ITEM_SOUL = 9
ITEM_DRINK = 10
ITEM_DRAGON_HEAD = 11
ITEM_DRAGON_BODY = 12
ITEM_PRAY2 = 13
ITEM_SHOCK_WAVE = 14
ITEM_NO_DRINK = 254
ITEM_INVALID = 255
MAGIC_REQUEST_ENBULLET = 0
MAGIC_REQUEST_WEAPON_ENCHANT = 1
MAGIC_REQUEST_NOTHING = -1
MAGIC_REQUEST_INVALID = 125
LADDER_ACTION_INVALID = -1
LADDER_ACTION_START_BOTTOM = 0
LADDER_ACTION_START_TOP = 1
LADDER_ACTION_UP_RIGHT = 2
LADDER_ACTION_UP_LEFT = 3
LADDER_ACTION_DOWN_RIGHT = 4
LADDER_ACTION_DOWN_LEFT = 5
LADDER_ACTION_END_TOP = 6
LADDER_ACTION_END_BOTTOM = 7
LADDER_ACTION_IDLE_RIGHT = 8
LADDER_ACTION_IDLE_LEFT = 9
LADDER_ACTION_ATTACK_UP_RIGHT = 10
LADDER_ACTION_ATTACK_UP_LEFT = 11
LADDER_ACTION_ATTACK_DOWN_RIGHT = 12
LADDER_ACTION_ATTACK_DOWN_LEFT = 13
LADDER_ACTION_COAST_START_RIGHT = 14
LADDER_ACTION_COAST_RIGHT = 15
LADDER_ACTION_COAST_LANDING = 20
LADDER_HAND_NOTHING = -1
LADDER_HAND_RIGHT = 0
LADDER_HAND_LEFT = 1
LADDER_CALL_UP = 0
LADDER_CALL_DOWN = 1
LADDER_CALL_NONE = -1
HAND_STATE_RIGHT = 0
HAND_STATE_LEFT = 1
THROW_TYPE_DEATH = 6
THROW_TYPE_INVALID = 0
HAND_RIGHT = 1
HAND_LEFT = 0
HAND_LEFT_BOTH = 2
HAND_RIGHT_BOTH = 3
HAND_BOTH = 4
HAND_CONDITION_SINGLE = 1
HAND_CONDITION_BOTH = 2
LEG_BOTH = -1
LEG_LEFT = 0
LEG_RIGHT = 1
WEAPON_CHANGE_REQUEST_NOTHING = -1
WEAPON_CHANGE_REQUEST_RIGHT_WAIST = 0
WEAPON_CHANGE_REQUEST_RIGHT_BACK = 1
WEAPON_CHANGE_REQUEST_RIGHT_SHOULDER = 2
WEAPON_CHANGE_REQUEST_RIGHT_SPEAR = 3
WEAPON_CHANGE_REQUEST_LEFT_WAIST = 4
WEAPON_CHANGE_REQUEST_LEFT_BACK = 5
WEAPON_CHANGE_REQUEST_LEFT_SHOULDER = 6
WEAPON_CHANGE_REQUEST_LEFT_SPEAR = 7
WEAPON_CATEGORY_SPEAR = 36
WEAPON_CATEGORY_STAFF = 41
WEAPON_CATEGORY_FIST_CUT = 43
WEAPON_CATEGORY_SMALL_ARROW = 44
WEAPON_CATEGORY_LARGE_ARROW = 45
WEAPON_CATEGORY_SMALL_SHIELD = 47
WEAPON_CATEGORY_LARGE_SHIELD = 48
WEAPON_CATEGORY_TOCHE = 49
GUARD_DAMAGE_GURDED = 1000
GUARD_DAMGE_GUARDBREAK = 1001
GUARD_DAMGE_BACK = 1002
GUARD_DAMAGE_GURDED_LEFT = 1003
GUARD_DAMAGE_GUARDBREAK_BLAST = 1004
GUARD_DAMAGE_GUARDBREAK_FLING = 1005
GUARD_DAMAGE_WALL_RIGHT = 1006
GUARD_DAMAGE_WALL_LEFT = 1007
DAMAGE_TYPE_PARRY = 5
DAMAGE_LEVEL_SMALL = 1
DAMAGE_LEVEL_MIDDLE = 2
DAMAGE_LEVEL_LARGE = 3
DAMAGE_LEVEL_EXLARGE = 4
DAMAGE_LEVEL_PUSH = 5
DAMAGE_LEVEL_FLING = 6
DAMAGE_LEVEL_SMALL_BLOW = 7
DAMAGE_LEVEL_MINIMUM = 8
DAMAGE_LEVEL_BLAST = 9
DAMAGE_LEVEL_BREATH = 11
DEATH_TYPE_COMMON = 0
DEATH_TYPE_COMMON_BACK = 1
DEATH_TYPE_SMALL_BLAST = 2
DEATH_TYPE_BLAST = 3
DEATH_TYPE_LADDER = 4
DEATH_TYPE_STONE = 5
DEATH_TYPE_FLING = 6
DEATH_TYPE_WEAK = 7
DEATH_TYPE_BLAST = 5
CONDITION_TYPE_CHANGE = 96
CONDITION_TYPE_CURSE = 116
CONDITION_TYPE_STONE = 117
CONDITION_TYPE_CRYSTAL = 136
CONDITION_TYPE_UNDEAD = 143
CONDITION_TYPE_FAKE_DEATH = 144
CONDITION_TYPE_SAINT = 146
CONDITION_TYPE_NO_EST = 154
CONDITION_TYPE_ALL_CHANGE = 167
CONDITION_TYPE_EGG = 192
CONDITION_TYPE_COLLUSIUM = 233
ATTACK_TYPE_INVALID = -1
ATTACK_TYPE_DEFAULT = 0
ATTACK_TYPE_LARGE = 1
ATTACK_TYPE_BOTH_DEFAULT = 2
ATTACK_TYPE_BOTH_LARGE = 3
ATTACK_TYPE_WEAK = 4
ATTACK_TYPE_NEAR = 5
ATTACK_TYPE_FAR = 6
ATTACK_TYPE_BOTH_NEAR = 7
ATTACK_TYPE_BOTH_FAR = 8
ATTACK_TYPE_AFTER_PARRY = 9
ATTACK_TYPE_BACK = 10
ATTACK_TYPE_GUARD = 11
ATTACK_TYPE_PARRY = 12
ATTACK_REQUEST_ROLLING = 11
ATTACK_REQUEST_BACKSTEP = 12
ATTACK_REQUEST_JUMP = 13
ATTACK_REQUEST_INVALID = -1
ATTACK_REQUEST_RIGHT_LIGHT = 0
ATTACK_REQUEST_RIGHT_HEAVY = 1
ATTACK_REQUEST_BOTH_LIGHT = 2
ATTACK_REQUEST_BOTH_HEAVY = 3
ATTACK_REQUEST_LIGHT_KICK = 4
ATTACK_REQUEST_HEAVY_KICK = 5
ATTACK_REQUEST_LEFT_LIGHT = 6
ATTACK_REQUEST_LEFT_HEAVY = 7
ATTACK_REQUEST_ARROW_CHANGE = 8
ATTACK_REQUEST_ARROW_CHANGE2 = 9
ATTACK_REQUEST_ARROW_FIRE = 10
ATTACK_REQUEST_ATTACK_WHILE_GUARD = 11
ATTACK_REQUEST_LEFT_BASH = 12
ATTACK_REQUEST_LEFT_PARRY = 13
ATTACK_REQUEST_ARROW_CHANGE_RIGHT = 14
ATTACK_REQUEST_ARROW_CHANGE_LEFT = 15
THROW_STATE_INVALID = 255
THROW_STATE_DEFAULT = 0
THROW_STATE_IDLE = 1
GUARD_STYLE_DEFAULT = 0
GUARD_STYLE_TOCHE = 1
TAE_FLAG_GUARD_CANCEL = 0
TAE_FLAG_DISENABLE_GUARD = 4
TAE_FLAG_STATE_END = 2
TAE_FLAG_WEAPONCHANGE_END = 1
CULT_STATE_IDLE = 1
CULT_STATE_MOVE = 2
CULT_STATE_RELESE = 3
CULT_STATE_FORCE_RELEASE = 4
TRANS_TO_ALL_BODY = "W_Lower"
g_DebugCounter = 0
g_DebugCounterSub = 0
g_FrameCount = 0
g_MoveSpeedLevel = 0
g_MoveSpeedLevelReal = 0
g_IsLockon = false
g_MoveAngle = 0
g_State = PLAYER_STATE_IDLE
g_IsActionRequest = FALSE
g_TimeCheckActionRequest = -1
g_IsGuard = FALSE
g_IsHalfBlend = FALSE
g_IsUseHoldTransition = FALSE
g_TimeMoveStop = -1
g_GuardUpperCondition = 0
g_GuardCondition = 0
g_FallStyle = FALL_DEFAULT
g_IsDown = DOWN_NONE
g_DownTime = -1
g_EventCommand = 0
g_TimeMoveUpdate = -1
g_StateCondition = {}
g_MoveCondition = MOVE_NONE
g_IsGuardEnable = TRUE
g_LadderCondition = -1
g_LadderExitCondition = -1
g_LadderUpOrDown = -1
g_IsLadderUpdate = FALSE
g_IsLadder = FALSE
g_LadderState = -1
g_IsLadderDamage = FALSE
g_IsMagic = FALSE
g_MagicCondition = 0
g_IsForceReturn = FALSE
g_IsJumpFall = FALSE
g_DisableFallAttack = FALSE
g_LegState = LEG_BOTH
g_IsAttackStart = FALSE
g_r1 = nil
g_r2 = nil
g_l1 = nil
g_l2 = nil
g_b1 = nil
g_b2 = nil
MOVE_NONE = -1
MOVE_WALK = 0
MOVE_RUN = 1
MOVE_DASH = 2
STATE_CONDITION_NONE = -1
STATE_CONDITION_MAGIC = 0
MOVE_RATE_DEFAULT = 1.2000000476837158

function IncNum(num)
    local str = nil
    if num < 10 then
        str = "Debug0"
    else
        str = "Debug"
    end
    vector = hkbGetVariable(str .. num)
    vector[0] = vector[0] + 1
    vector[1] = g_FrameCount
    SetVariable(str .. num, vector)
end

function DebugPrint(pos, val)
    local str = nil
    if pos < 10 then
        str = "Debug0"
    else
        str = "Debug"
    end
    vector = hkbGetVariable(str .. pos)
    vector[0] = val
    vector[1] = g_FrameCount
    SetVariable(str .. pos, vector)
end

function DebugPrintNext(val)
    g_DebugCounter = g_DebugCounter + 1
    if g_DebugCounter > 10 then
        g_DebugCounter = 1
    end
    DebugPrint(g_DebugCounter, val)
end

function DebugPrintts(val)
    g_DebugCounterSub = g_DebugCounterSub + 1
    if g_DebugCounterSub > 4 then
        g_DebugCounterSub = 1
        g_DebugCounter = g_DebugCounter + 1
        if g_DebugCounter > 10 then
            g_DebugCounter = 1
        end
    end
    local str = nil
    if g_DebugCounter < 10 then
        str = "Debug0"
    else
        str = "Debug"
    end
    vector = hkbGetVariable(str .. g_DebugCounter)
    vector[g_DebugCounterSub - 1] = val
    SetVariable(str .. g_DebugCounter, vector)
end

function PrintString(str)
    act(DebugLogOutput, str)
end

MAX_SPEED_LEVEL = 30
MIN_SPEED_LEVEL = 0
SPEED_STATE_START_DASH = 10

SpeedControll = {New = function ()
    local obj = {Speed = 0, BeforeSpeed = 0, SpeedLevel = 0, StopCount = 0, MoveCount = 0, DashPenaltyCount = 0, StaminaCount = 0, Slopes = {}, Intercepts = {}, StatePoints = {}, IsDashPenalty = FALSE, IsMoveStop = FALSE, IsSpeedDown = FALSE, DownSpeed = 0, Debug = TRUE}
    setmetatable(obj, {__index = SpeedControll})
    return obj
end}

STAMINA_REDUCE_ON_DASH = -3

SpeedControll.GetSlope = function (self, x1, y1, x2, y2)
    return (y2 - y1) / (x2 - x1)
end

SpeedControll.GetIntercept = function (self, x1, y1, x2, y2)
    return y1 - (y1 - y2) / (x1 - x2) * x1
end

SpeedControll.SetStatePoints = function (self, ...)
    self.StatePoints = {...}
    local i, j = nil
    for f9_local2 = 1, #self.StatePoints - 3, 2 do
        self.Slopes[(f9_local2 - 1) / 2 + 1] = self:GetSlope(self.StatePoints[f9_local2], self.StatePoints[f9_local2 + 1], self.StatePoints[f9_local2 + 2], self.StatePoints[f9_local2 + 3])
        self.Intercepts[(f9_local2 - 1) / 2 + 1] = self:GetIntercept(self.StatePoints[f9_local2], self.StatePoints[f9_local2 + 1], self.StatePoints[f9_local2 + 2], self.StatePoints[f9_local2 + 3])
    end

end

SpeedControll.GetSpeed = function (self)
    local i, pos = nil
    for f10_local2 = 1, #self.StatePoints, 2 do
        if self.StatePoints[f10_local2] <= self.SpeedLevel and self.SpeedLevel <= self.StatePoints[f10_local2 + 2] then
            pos = (f10_local2 - 1) / 2 + 1
            return self.SpeedLevel * self.Slopes[pos] + self.Intercepts[pos]
        end
    end
    return 0

end

SpeedControll.GetMoveSpeed = function (self, stick_level)
    local gap = stick_level - self.BeforeSpeed
    local speed = nil
    if stick_level == 0 then
        self.StopCount = self.StopCount + 1
    end
    if gap > 0 then
        self.StopCount = self.StopCount - 1
        if self.StopCount < 0 then
            self.StopCount = 0
        end
        self.SpeedLevel = self.SpeedLevel + 1
        if self.SpeedLevel > MAX_SPEED_LEVEL then
            self.SpeedLevel = MAX_SPEED_LEVEL
        end
        speed = self:GetSpeed()
        if stick_level < speed then
            speed = stick_level
            self.SpeedLevel = self.SpeedLevel - 1
        end
        self.BeforeSpeed = speed
    elseif gap < 0 then
        self.SpeedLevel = self.SpeedLevel - 1
        if self.SpeedLevel < MIN_SPEED_LEVEL then
            self.SpeedLevel = MIN_SPEED_LEVEL
        end
        speed = self:GetSpeed()
        if speed < stick_level then
            speed = stick_level
            self.SpeedLevel = self.SpeedLevel + 1
        end
        self.BeforeSpeed = speed
    else
        speed = self.BeforeSpeed
    end
    self.MoveCount = self.MoveCount + 1
    return speed
end

SpeedControll.SetSpeedZero = function (self)
    self.Speed = 0
    self.BeforeSpeed = 0
    self.SpeedLevel = 0
    self.StopCount = 0
    self.DashPenaltyCount = 0
    self.StaminaCount = 0
    self.MoveCount = 0
end

Stick = {New = function ()
    local obj = {Count = 0, Level = {}, Angle = {}}
    setmetatable(obj, {__index = Stick})
    return obj
end}

LEFT_STICK_BUFFER_SIZE = 20

Stick.ReserveLStick = function (self)
    self.Count = self.Count + 1
    if self.Count > LEFT_STICK_BUFFER_SIZE then
        self.Count = 1
    end
    self.Level[self.Count] = g_MoveSpeedLevel
    self.Angle[self.Count] = g_TurnAngle
end

Stick.GetLStick = function (self, n)
    local pos = self.Count - n
    if pos < 1 then
        pos = LEFT_STICK_BUFFER_SIZE + pos
    end
    return self.Level[pos], self.Angle[pos]
end

------------------------------------------
-- Core: Helper Functions
------------------------------------------
function Contains(tab, val)
    for index, value in ipairs(tab) do
        if value == val then
            return TRUE
        end
    end

    return FALSE
end

------------------------
-- Conditions
-- env( <condition>, <args> )
-- *<args> are optional
------------------------
IsGeneralAnimEnd = 0
IsAttackAnimEnd = 1
AnimIDOffset = 9
AdditiveBlendAnim = 10
AdditiveBlendAnimOfSlot = 11

IsAtkRequest = 100 -- args: <attack request index>
IsAtkReleaseRequest = 101
IsChainAtkRequest = 102
GetAtkDuration = 103
GetWeaponSwitchRequest = 104
GetCommandIDFromEvent = 105
GetAIActionType = 106
GetAIChainActionType = 107
GetChainEvadeRequest = 108
GetWeaponChangeRequest = 109
GetAnimIDFromMoveParam = 110
IsThereAnyAtkRequest = 111
IsThereAnyChainAtkRequest = 112
IsItemUseMenuOpening = 113
IsMagicUseMenuOpening = 114
IsItemUseMenuOpened = 115
IsMagicUseMenuOpened = 116
GetBlendAnimIDFromMoveParam = 117
GetAIChainStepType = 118
GetTransitionToSpecialStayAnimID = 119
GetAIAtkCancelType = 120
GetWeaponCancelType = 121 -- args: <hand index>
IsWeaponCancelPossible = 122
GetAIDefenseCancelType = 123
GetAIVersusBackstabCancelType = 124

IsFalling = 200
IsLanding = 201
GetReceivedDamageType = 202
IsActiveActionValid = 203
GetActionEventNumber = 204
IsNormalDmgPassThroughDuringThrow = 205
IsThrowing = 206
GetWeaponSwitchState = 207
IsEquipmentSwitchPossible = 209
IsAnimCancelPossibleInAtkRelease = 210
IsEmergencyStopAnimPlaying = 211
GetLockRangeState = 212
GetLockAngleState = 213
IsAnimCancelPossibleInDamageHit = 214
IsChangeToScrapeAtk = 215
IsChangeToDeflectAtk = 216
IsChangeToAfterParrySuccess = 217
IsChangeFromNormalToBigAtk = 218
GetMovementType = 219
IsLargeAtkComboPossible = 220
IsMapActionPossible = 221
GetReceivedDamageDirection = 222
GetMapActionID = 223
GetFallHeight = 224
GetEquipWeaponCategory = 225 -- args: <hand index>
IsHoldingBow = 226
GetMagicAnimType = 227
WasNotLargeAtk = 228
IsBackAtkPossible = 229
IsAfterParryAtkPossible = 230
GetItemAnimType = 231
IsMagicUseable = 232 -- args: <hand index>, <unknown index>
IsItemUseable = 233
IsPrecisionShoot = 234
IsFireDamaged = 235
GetDamageLevel = 236
GetGuardLevelAction = 237
IsNewLeftHandAtkFromStay = 238
IsParryFromIdle = 239
IsGuardFromIdle = 240
IsNewLeftHandAtkFromAtkCancel = 241
IsParryFromAtkCancel = 242
IsGuardFromAtkCancel = 243
IsTiedUp = 244
IsOutOfAmmo = 245 -- args: <slot index> # 1 is left slot, 0 is right slot
IsUseCatLanding = 246
GetHoverMoveState = 247
IsTruelyLanding = 248
IsRightHandMagic = 249
IsChangeToSpecialStayAnim = 250
GetSpecialStayAnimID = 251
AcquireSpecialDamageAnimationID = 252
IsRunTurnAnimPlaying = 253
IsGenerateAction = 254
GetSpecialStayCancelAnimID = 255
HasReceivedAnyDamage = 256
GetMoveAnimParamID = 257
GetGuardLevel = 258
IsRequestTurnAnimStart = 259
IsTurningWithAnim = 260
IsFlying = 261
IsAbilityInsufficient = 262 -- args: <hand index>
GetEquipWeightRatioForFalling = 263
GetFlightMotionState = 264
GetIsWeakPoint = 265
GetMoveAnimBlendRatio = 266
GetLadderActionState = 267
IsInDisguise = 268
IsCoopWait = 269
IsCoop = 270
IsSpecialTransitionPossible = 271
GetLandingAnimBlendRatio = 272
GetThrowAnimID = 273
DidOpponentDieFromThrow = 274
HasThrowEnded = 275
IsThrowSelfDeath = 276
IsThrowSuccess = 277
GetGuardMotionCategory = 278 -- args: <hand index>
IsBeingThrown = 279
IsSelfThrow = 280
IsThrowDeathState = 281
GetNewLockState = 282
IsOnLadder = 283
GetPhysicalAttribute = 284
GetSpecialAttribute = 285
GetSpecialStayDeathAnimID = 286
HasReceivedAnyDamage_AnimEnd = 287
EggGrowth_IsHeadScratch = 288
EggGrowth_IsBecomeEggHead = 289
IsStop = 290
IsSomeoneOnLadder = 291 -- args: <check distance>, <unknown index>
IsSomeoneUnderLadder = 292 -- args: <check distance>, <unknown index>
GetLadderHandState = 293
DoesLadderHaveCharacters = 294 -- args: <check distance>, <unknown index>, <unknown index>
IsLadderRightHandStayState = 295
IsDescendingToFloor = 296
IsInputDirectionMatch = 297
IsSpecialTransition2Possible = 298
IsVersusDivineDamage = 299

IsGeneralAnimCancelPossible = 300
GetEventEzStateFlag = 301 -- args: <EzState command id>
IsLadderEventEnd = 302
IsReachBottomOfLadder = 303
IsReachTopOfLadder = 304
GetStateChangeType = 305 -- args: <state change id>
IsOnLastRungOfLadder = 306
GetWeaponDurability = 311
IsWeaponBroken = 312
IsAnimEndBySkillCancel = 313
EggGrowth_IsBecomeEgghead_SecondStage = 314
IsHamariFallDeath = 315 -- args: <unknown index>
IsClient = 316
IsSlope = 317
IsSwitchState = 318
IsPressUpKey = 319
IsSpecialTurning = 320
GetIntValueForTest = 321
IsObjActInterpolatedMotion = 322
GetObjActTargetDirection = 323
GetObjActRemainingInterpolateTime = 324
IsGap = 325
GetSwordArtID = 326 -- args: <hand index>
IsMovingLaterally = 327
IsNet = 328
HasBrokenSA = 329
IsEmergencyQuickTurnActivated = 330
IsDoubleChantPossible = 331
IsAnimOver = 332
ObtainedDT = 333
GetBehaviorID = 334 -- args: <hand index>
IsTwoHandPossible = 335 -- args: <hand index>
IsPartDamageAdditiveBlendInvalid = 336
IsThrowPosRealign = 337
GetBoltLoadingState = 338 -- args: <slot index>
IsAnimEnd = 339 -- args: <unknown index>
IsTwinSwords = 340 -- args: <hand index>
GetTurnAngleForDelayedTurn = 341
GetThrowDefenseCount = 342
IsEmergencyEvasionPossible = 343 -- args: <unknown index>
HasEnoughArtsPoints = 344 -- args: <button index>, <hand index>
GetEquipWeaponSpecialCategoryNumber = 345 -- args: <hand index>
CheckForEventAnimPlaybackRequest = 346
IsFemale = 347
GetDelayTurnAngleDifference = 348
IsDamageMotionOff = 349
HasReachedStatsNeededForWeapon = 350 -- args: <hand index>  -- Checks for the attainmentWepStatus fields in EquipParamWeapon
UpperArmControlOuterAngle = 351
UpperArmControlTopAndBottomAngle = 352
CompleteLadderSlideDown = 353
GetLadderRungCount = 354
GetNumberOfRungsBelowOnLadder = 355
GetBowAndArrowSlot = 356
GetWeaponStorageSpotType = 357 -- args: <hand index>
GetStayAnimCategory = 358
GetWeaponSwitchStatus = 359
IsEquipmentMenuOpen = 360
GetRemainingArrowCount = 361
GetSpEffectType = 362 -- args: <enum> SP_EFFECT_TYPE_
IsPlayerInRangeOfMount = 363
GetEventID = 364
IsMultiplayer = 365
IsAutomaticTesting = 368

GetHP = 1000
GetStamina = 1001
IsGhost = 1002
GetRandomInt = 1003
GetRandomFloat = 1004
IsUnableToDie = 1005
IsResurrectionPossible = 1006
IsCOMPlayer = 1007
GetAITargetAwareState = 1008
IsAIChangeToAwareState = 1009
GetAITargetAwareStatePreviousFrame = 1010

GetTestDamageAnimID = 1100
IsInvincibleDebugMode = 1101
WasGameLaunchedInPGTestMode = 1102
IsTiltingStick = 1103
GetGestureRequestNumber = 1104
IsStayState = 1105
ActionRequest = 1106 -- args: <action arm index>
ActionCancelRequest = 1107 -- args: <action arm index>
ActionDuration = 1108 -- args: <action arm index>
HasActionRequest = 1109
MovementRequest = 1110
MovementRequestDuration = 1111
HasThrowRequest = 1112
IsGuardCancelPossible = 1113
DoesAnimExist = 1114 -- args: <anim id>, *<anim id>
GetAIMovementType = 1115
GetSpEffectID = 1116
IsConversationEnd = 1117
IsLocked = 1118
GetAtkDirection = 1119
GetPartGroup = 1120
GetKnockbackDistance = 1121

IsMoveCancelPossible = 2000
GetSpecialMovementType = 2002
GetGeneralTAEFlag = 2003 -- args: <flag>
IsSwingHitTarget = 2004
GetCeremonyState = 2005
GetSuccessiveGuardCount = 2006
GetMinLuck = 2007
GetAccumulatedLuck = 2008
GetMaxLuck = 2009
GetMaxStamina = 2010
GetGeneralMSBParameter = 2011
IsHitWall = 2012
GetSafetyDirection = 2013
IsInCeremony = 2014
IsDoingCorpseCarryKeyframe = 2015
GetFP = 2016
IsCeremonyComplete = 2017
IsCeremonyInterrupt = 2018

IsSpeaking = 3000
GetTalkBehavior = 3001
GetTalkEzStateBehaviourID = 3002

Unknown9999 = 9999

------------------------
-- Commands
-- act( <command>, <args> )
-- *<args> are optional
------------------------
ChangeGeneralAnim = 0
ChangeUpperBodyAnim = 1
ChangeStayAnim = 2
ChangeGeneralAnimCategorized = 3 -- args: <anim category>, <anim id>, <layer index>, <blend>, <isLoop>
ChangeUpperBodyAnimCategorized = 4
ChangeGeneralAnimAdditiveCategorized = 5
ChangeUpperBodyAnimAdditiveCategorized = 6
ChangeGeneralAnimCategorizedMatchPlaybackTime = 7
ChangeUpperBodyAnimCategorizedMatchPlaybackTime = 8
SetAnimIDOffset = 9
SetAdditiveBlendAnimation = 10
SetAdditiveBlendAnimationSlotted = 11
ChangeBlendAnimationCategorized = 12
ChangeUpperAndLowerBodySyncedAnimCategorized = 13

SetActiveActionState = 100
SwitchMotion = 101 -- args: <bool>
SetAllowedThrowAttackType = 102 -- args: <index> # ENUM: THROW_STATE
SetAllowedThrowDefenseType = 103 -- args: <index> # ENUM: THROW_STATE
SwitchEquippedWeapon = 104
SetReadyForAtkFinish = 105
SetEquipmentChangeable = 106
SetUnableToFall = 107
SendMessageIDToEvents = 108 -- args: <event call>
SetAttackType = 109 -- args: <index> # -1
SetStaminaRecoveryDisabled = 110
SetAIBusyDoingAction = 111
BowTurn = 112
SetBowStance = 113
SetPreciseAimMode = 114
SetSpecialMovement = 115
SetIsWeaponChanging = 116
SetIsItemInUse = 117 -- args: <bool>
SetIsMagicInUse = 118 -- args: <bool>
SetHoverState = 119
RemoveBinoculars = 120
ChangeToSpecialStay = 121
SetIsHeadTurnPossible = 122
OpenMenuWhenUsingItem = 123
OpenMenuWhenUsingMagic = 124 -- args: <action arm index>
BlowDamageTurn = 125
SetDeathStay = 126 -- args: <bool> # TRUE, FALSE
CloseMenuWhenUsingItem = 127
CloseMenuWhenUsingMagic = 128
DisallowAdditiveTurning = 129 -- args: <bool>
ChangeFlightStatus = 130
ShowFixedYAxisDirectionDisplay = 131
WhiffPossibility = 132
SetLadderActionState = 133 -- args: <index>
SetInsufficientStrengthAnimID = 134
ForceCancelThrowAnim = 135
SetThrowState = 136 -- args: <index> # ENUM: THROW_TYPE
StartSlidingDownLadder = 137
SetIsEventActionPossible = 138 -- args: <bool>
RequestThrowAnimInterrupt = 139
SetHandStateOfLadder = 140
SetDamageAnimType = 141 -- args: <index> # ENUM: DAMAGE_FLAG
DownwardSlideTurn = 142 -- args: <index>
InterruptAttack = 143
SkyDeathWarp = 144
ClearSlopeInfo = 145
ReceiveStateInput = 146
SetCanChangeEquipmentOn = 147
SetHavokVariable = 148 -- args: <string>, <value>
AimAtSelfPosition = 149
SetIsItemAnimationPlaying = 150
DoAIReplanningAtCancelTiming = 151
DenyEventAnimPlaybackRequest = 152
InvokeBackstab = 153
WeaponParameterReference = 154 -- args: <hand index>
AINotifyAttackType = 155 -- args: <index>
SetAutoCaptureTarget = 156
ClearAutoCaptureTarget = 157
RequestAIReplanning = 158
TurnTowardAttacker = 159
SetThrowPossibilityState_Attacker = 160 -- args: <index>
SetThrowPossibilityState_Defender = 161 -- args: <index>
NotifyAIMagicCast = 162
SetCanChangeEquipmentOff = 163

StateIdentifier = 200

ChangeHP = 1000 -- args: <value>
ChangeStamina = 1001 -- args: <value> # ENUM: STAMINA_REDUCE

SyncAtInit_Active = 1100
SyncAtInit_Passive = 1101

SetMovementScaleMult = 2001 -- args: <value>
AddSpEffect = 2002 -- args: <id>
SetFastStealthThrowEnabled = 2003
SetTurnSpeed = 2004 -- args: <degrees>
SetCeremonyState = 2005
SetDamageMotionBlendRatio = 2006 -- args: <value>
SetForceTurnTarget = 2007
ForceTurn = 2008
SpecialTurn = 2009
SetInSpecialGuard = 2010
SetWeaponCancelType = 2011 -- args: <index>
SetIsPreciseShootingPossible = 2012
ChooseBowAndArrowSlot = 2013 -- args: <slot index> # 0, 1
Set4DirectionMovementThreshold = 2014 -- args: <front right angle>, <front left angle>, <back left angle>, <back right angle> #
LockonSystemUnableToTurnAngle = 2015 -- args: <angle>, <angle>
ReserveArtsPointsUse = 2016 -- args: <button index>, <hand index>
SetArtsPointFEDisplayState = 2017 -- args: <value> # 0, 1
LockonFixedAngleCancel = 2018
TurnToLockonTargetImmediately = 2019 -- args: *<value>
SetSpecialInterpolation = 2020 -- args: <value>, <bool>
LadderSlideDownCancel = 2021
DisableMagicIDSwitching = 2022
DisableToolIDSwitching = 2023
UseItemDecision = 2024
SetNpcAIAttackRequestIDAfterBlend = 2025 -- args: <value>
DecideMagicUse = 2026
FallPreventionAssist = 2027
FaceDirection = 2029 -- args: <degrees>
PlayEventSync = 2031

DebugLogOutput = 9000
ClearSpEffect = 9001 -- args: <id>
Test_SpEffectTypeSpecifyDelete = 9002 
MarkerStart = 9003
MarkerEnd = 9004

Wait = 9100
ResetInputQueue = 9101
SetIsEventAnim = 9102
SetAIAttackState = 9103 -- args: <index>
SetIsTurnAnimInProgress = 9104
SetTurnAnimCorrectionRate = 9105 -- args: <degrees>

ReplanningRequestToAI = 9999 -- args: <value> # 1, 2, 3

------------------------------------------
-- Must be last for the global variables to be read
------------------------------------------
global = {}

function dummy()
end

global.__index = function (table, element)
    return dummy
end

setmetatable(_G, global)
